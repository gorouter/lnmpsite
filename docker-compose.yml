version: '2'
# 定义四个服务nginx,php,mysql,redis
services:
  nginx:
    # 依赖php服务，意味着在启动nginx之前先启动php
    depends_on:
      - php
    
    # nginx镜像的路径
    image: wisbyme/lnmpsite-nginx:latest
    #build: ./nginx
    
    # 这样使nginx容器把网站文件和目录存放到主机目录中，持久化和方便管理
    volumes:
      - ./nginx/ssl/nginx.crt:/etc/nginx/cert/nginx.crt
      - ./nginx/ssl/nginx.key:/etc/nginx/cert/nginx.key
      - ./nginx/ssl/cloudflare.crt:/etc/nginx/cert/cloudflare.crt
      - ./nginx/www:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx.log:/var/log/nginx/error.log

    # nginx意外退出时自动重启
    restart: always

    # 映射80和443端口
    ports:
      - "808:808"
      - "443:443"
    networks:
      - frontend

    # 容器名称
    container_name: nginx

  php:
    depends_on:
      - mysql
      - redis
    
    image: wisbyme/lnmpsite-php:latest
    #build: ./php
    
    ports:
      - "9001"
    networks:
      - frontend
      - backend     
      
    volumes:
      - ./php/php-fpm.conf:/usr/local/php/etc/php-fpm.conf
      - ./php/www.conf:/usr/local/php/etc/php-fpm.d/www.conf
      - ./php/php.ini:/usr/local/php/etc/php.ini
      - ./log/php-fpm.log:/usr/local/php/var/log/php-fpm.log
      - ./nginx/www:/usr/share/nginx/html
      
    restart: always
    container_name: php

  # MySQL
  mysql:
    image: wisbyme/lnmpsite-mysql:latest
    #build: ./mysql
    ports:
      - "127.0.0.1:3306:3306"
      
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/my.cnf
      
    environment:
      MYSQL_ROOT_PASSWORD: 1234567890
      
    command: ['mysqld', '--character-set-server=utf8']
    networks:
      - backend
    restart: always
    container_name: mysql

  # REDIS
  redis:
    image: wisbyme/lnmpsite-redis:latest
    #build: ./redis
    
    ports:
      - "127.0.0.1:6379:6379"
    networks:
      - backend
    
    volumes:
      - ./redis/redis.conf:/usr/local/redis/redis.conf
      - ./log/redis.log:/usr/local/redis/redis.log
    restart: always
    container_name: redis

networks:
  frontend:
  backend:
